<Page
    x:Class="MyDEFCON_UWP.Views.ShellPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:behaviors="using:MyDEFCON_UWP.Behaviors"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:helpers="using:MyDEFCON_UWP.Helpers"
    xmlns:views="using:MyDEFCON_UWP.Views"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:i="using:Microsoft.Xaml.Interactivity"    
    mc:Ignorable="d">

    <i:Interaction.Behaviors>
        <ic:EventTriggerBehavior EventName="Loaded">
            <ic:InvokeCommandAction Command="{x:Bind ViewModel.LoadedCommand}" />
        </ic:EventTriggerBehavior>
    </i:Interaction.Behaviors>
    <Grid>
        <Grid x:Name="backgroundGrid">
            <Grid.RenderTransform>
                <CompositeTransform SkewX="-45"/>
            </Grid.RenderTransform>
            <Grid Background="Black" Margin="0,0,-1134,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Background="#FFE8FF00"/>
                <StackPanel Grid.Column="2" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="4" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="6" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="8" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="10" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="12" Background="#FFE8FF00"/>
                <StackPanel Grid.Column="14" Background="#FFE8FF00"/>
            </Grid>
        </Grid>
        <CommandBar Background="#FFE8FF00" Foreground="Red" Margin="60,0,0,0" OverflowButtonVisibility="Collapsed">
            <!--<CommandBar.Content>
                <TextBlock Text="Test" Style="{ThemeResource TitleTextBlockStyle}"/>
            </CommandBar.Content>-->
            <AppBarButton Icon="Share" Foreground="Red"/>
            <AppBarButton Icon="Sync" Foreground="Red"/>
            <AppBarButton Icon="List" Foreground="Red"/>
            <AppBarButton Icon="Delete" Foreground="Red"/>
        </CommandBar>
        <winui:NavigationView
        x:Name="navigationView"
        IsBackButtonVisible="Visible"
        IsBackEnabled="{x:Bind ViewModel.IsBackEnabled, Mode=OneWay}"
        SelectedItem="{x:Bind ViewModel.Selected, Mode=OneWay}"
        IsSettingsVisible="True" PaneDisplayMode="LeftCompact">            
            <winui:NavigationView.Resources>
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="/Styles/SolidColorBrushes.xaml"/>
                        <ResourceDictionary Source="/Styles/CustomNavigationView.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>                
            </winui:NavigationView.Resources>
            <winui:NavigationView.Style>
                <StaticResource ResourceKey="CustomNavigationViewStyle"/>
            </winui:NavigationView.Style>
            <!--<winui:NavigationView.PaneToggleButtonStyle>
                <StaticResource ResourceKey="RedPaneToggleButtonStyle"/>
            </winui:NavigationView.PaneToggleButtonStyle>-->

            <winui:NavigationView.MenuItems>
            <!--
            TODO WTS: Change the symbols for each item as appropriate for your app
            More on Segoe UI Symbol icons: https://docs.microsoft.com/windows/uwp/style/segoe-ui-symbol-font
            Or to use an IconElement instead of a Symbol see https://github.com/Microsoft/WindowsTemplateStudio/blob/master/docs/projectTypes/navigationpane.md
            Edit String/en-US/Resources.resw: Add a menu item title for each page
            -->
            <winui:NavigationViewItem x:Uid="Shell_Main" Icon="Home" helpers:NavHelper.NavigateTo="views:MainPage" />
                <winui:NavigationViewItem x:Uid="Shell_Checklist" Icon="List" helpers:NavHelper.NavigateTo="views:ChecklistPage" />
            <winui:NavigationViewItem x:Uid="Shell_Messages" Icon="Message" helpers:NavHelper.NavigateTo="views:MessagesPage" />
                <winui:NavigationViewItem x:Uid="Shell_FullScreen" Icon="FullScreen" helpers:NavHelper.NavigateTo="views:FullScreenPage" />
        </winui:NavigationView.MenuItems>
        <i:Interaction.Behaviors>
            <behaviors:NavigationViewHeaderBehavior
                DefaultHeader="{x:Bind ViewModel.Selected.Content, Mode=OneWay}">
                <behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
                    <DataTemplate>
                        <Grid Margin="0,-40,0,0">
                            <TextBlock
                                Foreground="Red"
                                Text="{Binding}"
                                Style="{ThemeResource TitleTextBlockStyle}"
                                Margin="{StaticResource SmallLeftRightMargin}" />
                        </Grid>
                    </DataTemplate>
                </behaviors:NavigationViewHeaderBehavior.DefaultHeaderTemplate>
            </behaviors:NavigationViewHeaderBehavior>
            <ic:EventTriggerBehavior EventName="ItemInvoked">
                <ic:InvokeCommandAction Command="{x:Bind ViewModel.ItemInvokedCommand}" />
            </ic:EventTriggerBehavior>
        </i:Interaction.Behaviors>
        <Grid>
            <Frame x:Name="shellFrame" />
        </Grid>
    </winui:NavigationView>
    </Grid>
</Page>
